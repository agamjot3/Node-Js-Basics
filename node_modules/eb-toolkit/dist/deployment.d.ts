declare type DeploymentOptions = {
    filePath: string;
    appName: string;
    appEnv: string;
    versionLabel?: string;
    stack: string;
    beanstalkConfig?: any;
    tags?: any[];
    tier: 'WebServer' | 'Worker';
    deploymentStrategy: 'standard' | 'bluegreen';
};
export declare class Deployment {
    private application;
    constructor(credentials?: any);
    deploy({ deploymentStrategy, ...options }: DeploymentOptions): Promise<void | import("aws-sdk/clients/elasticbeanstalk").EnvironmentDescription>;
    deployStandard({ filePath, appEnv, appName, stack, versionLabel, beanstalkConfig, tags, tier, }: Omit<DeploymentOptions, 'deploymentStrategy'>): Promise<import("aws-sdk/clients/elasticbeanstalk").EnvironmentDescription>;
    deployBlueGreen({ filePath, appEnv, appName, stack, versionLabel, beanstalkConfig, tags, tier, }: Omit<DeploymentOptions, 'deploymentStrategy'>): Promise<void>;
    private static getBeanstalkConfig;
    private static getUniqueEnvironmentName;
    private swapEnvironmentCName;
}
export {};
